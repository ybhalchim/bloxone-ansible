---
- module_defaults:
    group/infoblox.bloxone.all:
      csp_url: "{{ csp_url }}"
      api_key: "{{ api_key }}"
  block:
    # Create a random IP space name to avoid conflicts
    - ansible.builtin.set_fact:
        tag_value: "site-{{ 999999 | random | string }}"

    - name: "Create an Address Block (check mode)"
      infoblox.bloxone.ipam_address_block:
        address: "10.0.0.0/16"
        space: "{{ _ip_space.id }}"
        state: "present"
      check_mode: true
      register: address_block
    - name: Get information about the Address Block
      infoblox.bloxone.ipam_address_block_info:
        filters:
          address: "10.0.0.0"
          space: "{{ _ip_space.id }}"
          cidr: 16
      register: address_block_info
    - assert:
        that:
          - address_block is changed
          - address_block is not failed
          - address_block_info.objects | length == 0

    - name: "Create an Address Block"
      infoblox.bloxone.ipam_address_block:
        address: "10.0.0.0/16"
        space: "{{ _ip_space.id }}"
        state: "present"
      register: address_block
    - name: Get information about the Address Block
      infoblox.bloxone.ipam_address_block_info:
        filters:
          address: "10.0.0.0"
          space: "{{ _ip_space.id }}"
          cidr: 16
      register: address_block_info
    - assert:
        that:
          - address_block is changed
          - address_block is not failed
          - address_block_info.objects | length == 1

    - name: "Create an Address Block (idempotent)"
      infoblox.bloxone.ipam_address_block:
        address: "10.0.0.0/16"
        space: "{{ _ip_space.id }}"
        state: "present"
      register: address_block
    - assert:
        that:
          - address_block is not changed
          - address_block is not failed

    - name: "Create Next Available Address Block"
      infoblox.bloxone.ipam_address_block:
        space: "{{ _ip_space.id }}"
        cidr: 20
        next_available_id: "{{ address_block.id }}"
        state: "present"
      register: next_available_address_block
    - name: Get Address Block Information by ID
      infoblox.bloxone.ipam_address_block_info:
        id: "{{ next_available_address_block.id }}"
      register: next_available_address_block_info
    - assert:
        that:
          - next_available_address_block is changed
          - next_available_address_block is not failed
          - next_available_address_block_info.objects | length == 1

    - name: "Delete an Address Block (check mode)"
      infoblox.bloxone.ipam_address_block:
        address: "10.0.0.0/16"
        space: "{{ _ip_space.id }}"
        state: "absent"
      check_mode: true
      register: address_block
    - name: Get information about the Address Block
      infoblox.bloxone.ipam_address_block_info:
        filters:
          address: "10.0.0.0"
          space: "{{ _ip_space.id }}"
          cidr: 16
      register: address_block_info
    - assert:
        that:
          - address_block is changed
          - address_block is not failed
          - address_block_info.objects | length == 1

    - name: "Delete an Address Block"
      infoblox.bloxone.ipam_address_block:
        address: "10.0.0.0/16"
        space: "{{ _ip_space.id }}"
        state: "absent"
      register: address_block
    - name: Get information about the Address Block
      infoblox.bloxone.ipam_address_block_info:
        filters:
          address: "10.0.0.0"
          space: "{{ _ip_space.id }}"
          cidr: 16
      register: address_block_info
    - assert:
        that:
          - address_block is changed
          - address_block is not failed
          - address_block_info.objects | length == 0

    - name: "Delete an Address Block (idempotent)"
      infoblox.bloxone.ipam_address_block:
        address: "10.0.0.0/16"
        space: "{{ _ip_space.id }}"
        state: "absent"
      register: address_block
    - assert:
        that:
          - address_block is not changed
          - address_block is not failed

    - name: "Create an Address Block with separate cidr"
      infoblox.bloxone.ipam_address_block:
        address: "10.0.0.0"
        cidr: 16
        space: "{{ _ip_space.id }}"
        state: "present"
      register: address_block
    - name: Get information about the Address Block
      infoblox.bloxone.ipam_address_block_info:
        filters:
          address: "10.0.0.0"
          space: "{{ _ip_space.id }}"
          cidr: 16
      register: address_block_info
    - assert:
        that:
          - address_block is changed
          - address_block is not failed
          - address_block_info.objects | length == 1

    - name: "Create an Address Block with ASM config overridden"
      infoblox.bloxone.ipam_address_block:
        address: "10.0.0.0/16"
        space: "{{ _ip_space.id }}"
        asm_config:
          asm_threshold: 70
          enable: true
          enable_notification: true
          forecast_period: 12
          growth_factor: 40
          growth_type: "count"
          history: 40
          min_total: 30
          min_unused: 30
        inheritance_sources:
          asm_config:
            asm_enable_block:
              action: inherit
            asm_growth_block:
              action: inherit
            asm_threshold:
              action: override
            forecast_period:
              action: override
            history:
              action: override
            min_total:
              action: override
            min_unused:
              action: override
        state: "present"
      register: address_block
    - name: Get information about the Address Block
      infoblox.bloxone.ipam_address_block_info:
        filters:
          address: "10.0.0.0"
          space: "{{ _ip_space.id }}"
          cidr: 16
      register: address_block_info
    - assert:
        that:
          - address_block is changed
          - address_block is not failed
          - address_block_info.objects | length == 1
          - address_block_info.objects[0].asm_config.asm_threshold == 70
          - address_block_info.objects[0].asm_config.forecast_period == 12
          - address_block_info.objects[0].inheritance_sources.asm_config.asm_threshold.action == "override"
          - address_block_info.objects[0].inheritance_sources.asm_config.forecast_period.action == "override"

    - name: "Create an Address Block with comment"
      infoblox.bloxone.ipam_address_block:
        address: "10.0.0.0/16"
        space: "{{ _ip_space.id }}"
        state: "present"
        comment: "Comment."
      register: address_block
    - name: Get information about the Address Block
      infoblox.bloxone.ipam_address_block_info:
        filters:
          address: "10.0.0.0"
          space: "{{ _ip_space.id }}"
          cidr: 16
      register: address_block_info
    - assert:
        that:
          - address_block is not failed
          - address_block_info.objects | length == 1
          - address_block_info.objects[0].comment == address_block.object.comment

    - name: "Create an Address Block with ddns_client_update set to server"
      infoblox.bloxone.ipam_address_block:
        address: "10.0.0.0/16"
        space: "{{ _ip_space.id }}"
        state: "present"
        ddns_client_update: "server"
      register: address_block
    - name: Get information about the Address Block
      infoblox.bloxone.ipam_address_block_info:
        filters:
          address: "10.0.0.0"
          space: "{{ _ip_space.id }}"
          cidr: 16
      register: address_block_info
    - assert:
        that:
          - address_block is not failed
          - address_block_info.objects | length == 1
          - address_block_info.objects[0].ddns_client_update == "server"

    - name: "Create an Address Block with ddns_use_conflict_resolution set to false"
      infoblox.bloxone.ipam_address_block:
        address: "10.0.0.0/16"
        space: "{{ _ip_space.id }}"
        state: "present"
        ddns_use_conflict_resolution: "false"
      register: address_block
    - name: Get information about the Address Block
      infoblox.bloxone.ipam_address_block_info:
        filters:
          address: "10.0.0.0"
          space: "{{ _ip_space.id }}"
          cidr: 16
      register: address_block_info
    - assert:
        that:
          - address_block is not failed
          - address_block_info.objects | length == 1
          - address_block_info.objects[0].ddns_use_conflict_resolution == false

    - name: "Create an Address Block with DHCP config overridden"
      infoblox.bloxone.ipam_address_block:
        address: "10.0.0.0/16"
        space: "{{ _ip_space.id }}"
        dhcp_config:
          lease_time: 3600
        inheritance_sources:
          dhcp_config:
            lease_time:
              action: override
            abandoned_reclaim_time:
              action: inherit
            abandoned_reclaim_time_v6:
              action: inherit
            allow_unknown:
              action: inherit
            allow_unknown_v6:
              action: inherit
            echo_client_id:
              action: inherit
            filters:
              action: inherit
            filters_v6:
              action: inherit
            ignore_client_uid:
              action: inherit
            ignore_list:
              action: inherit
            lease_time_v6:
              action: inherit
        state: "present"
      register: address_block
    - name: Get information about the Address Block
      infoblox.bloxone.ipam_address_block_info:
        filters:
          address: "10.0.0.0"
          space: "{{ _ip_space.id }}"
          cidr: 16
      register: address_block_info
    - assert:
        that:
          - address_block is not failed
          - address_block_info.objects | length == 1
          - address_block_info.objects[0].dhcp_config.lease_time == 3600
          - address_block_info.objects[0].inheritance_sources.dhcp_config.lease_time.action == "override"

    - name: "Create an Address Block with hostname_rewrite_enabled set to true"
      infoblox.bloxone.ipam_address_block:
        address: "10.0.0.0/16"
        space: "{{ _ip_space.id }}"
        state: "present"
        hostname_rewrite_enabled: "true"
      register: address_block
    - name: Get information about the Address Block
      infoblox.bloxone.ipam_address_block_info:
        filters:
          address: "10.0.0.0"
          space: "{{ _ip_space.id }}"
          cidr: 16
      register: address_block_info
    - assert:
        that:
          - address_block is not failed
          - address_block_info.objects | length == 1
          - address_block_info.objects[0].hostname_rewrite_enabled == true

    - name: "Create an Address Block with tags"
      infoblox.bloxone.ipam_address_block:
        address: "10.0.0.0/16"
        space: "{{ _ip_space.id }}"
        tags:
          location: "{{ tag_value }}"
        state: "present"
      register: address_block
    - name: Get information about the Address Block
      infoblox.bloxone.ipam_address_block_info:
        filters:
          address: "10.0.0.0"
          space: "{{ _ip_space.id }}"
          cidr: 16
      register: address_block_info
    - assert:
        that:
          - address_block is not failed
          - address_block_info.objects | length == 1
          - address_block_info.objects[0].tags.location == tag_value

  always:
    # Cleanup if the test fails
    - ansible.builtin.include_role:
        name: setup_ip_space
        tasks_from: cleanup.yml
