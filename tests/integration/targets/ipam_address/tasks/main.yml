---
#TODO: add tests
# The following require additional plugins to be supported.
# - Address with NextAvailable ID count
# - Address with NextAvailable Subnet
# - Address with NextAvailable AddressBlock
# - Address with NextAvailable Range
-
- module_defaults:
    group/infoblox.bloxone.all:
      csp_url: "{{ csp_url }}"
      api_key: "{{ api_key }}"
  block:

    # Basic tests for Address
    - name: Create a Address
      infoblox.bloxone.ipam_address:
        address: "10.0.0.3"
        space: "{{ ip_space.id }}"
        state: "present"
      register: address
    - name: Get information about the Address
      infoblox.bloxone.ipam_address_info:
        filters: {
          address: "10.0.0.3",
          space: "{{ ip_space.id }}"
        }
      register: address_info
    - assert:
        that:
          - address is changed
          - address is not failed
          - address_info.objects | length != 0

    - name: Create a Address(idempotent)
      infoblox.bloxone.ipam_address:
        address: "10.0.0.3"
        space: "{{ ip_space.id }}"
        state: "present"
      register: address
    - assert:
        that:
          - address is not changed
          - address is not failed

    - name: Create the Address with Name
      infoblox.bloxone.ipam_address:
        address: "10.0.0.8"
        names: [{"name": "test-1","type": "user"}]
        space: "{{ ip_space.id }}"
        state: "present"
      register: address
    - name: Get information about the Address
      infoblox.bloxone.ipam_address_info:
        filters: {
          address: "10.0.0.8",
         space: "{{ ip_space.id }}"
        }
      register: address_info
    - assert:
        that:
          - address is changed
          - address is not failed
          - address_info.objects | length > 0

    - name: Create the Address with comment
      infoblox.bloxone.ipam_address:
        address: "10.0.0.5"
        comment: "some comment"
        space: "{{ ip_space.id }}"
        state: "present"
      register: address
    - name: Get information about the Address
      infoblox.bloxone.ipam_address_info:
        filters: {
          address: "10.0.0.5",
          space: "{{ ip_space.id }}"
        }
      register: address_info
    - assert:
        that:
          - address is changed
          - address is not failed
          - address_info.objects[0].comment == "some comment"

    - name: Create the Address with hwaddr (check mode)
      infoblox.bloxone.ipam_address:
        address: "10.0.0.8"
        hwaddr : "00:11:22:33:44:55"
        space: "{{ ip_space.id }}"
        state: "present"
      check_mode: true

    - name: Create the Address with Interface (check mode)
      infoblox.bloxone.ipam_address:
        address: "10.0.0.8"
        interface: "eth0"
        space: "{{ ip_space.id }}"
        state: "present"
      register: address
      check_mode: true

    - name: Create the Address with Tags (check mode)
      infoblox.bloxone.ipam_address:
        address: "10.0.0.8"
        tags: {	"tag1": "value1","tag2": "value2",}
        space: "{{ ip_space.id }}"
        state: "present"
      check_mode: true

    - name: Delete a Address
      infoblox.bloxone.ipam_address:
        address: "10.0.0.3"
        space: "{{ ip_space.id }}"
        state: "absent"

    - name: Delete a Address
      infoblox.bloxone.ipam_address:
        address: "10.0.0.5"
        space: "{{ ip_space.id }}"
        state: "absent"

    - name: Delete a Address
      infoblox.bloxone.ipam_address:
        address: "10.0.0.8"
        space: "{{ ip_space.id }}"
        state: "absent"

    - name: Get information about the address
      infoblox.bloxone.ipam_address_info:
        filters: {
          address: "10.0.0.3",
          space: "{{ ip_space.id }}"
        }
      register: address_info
    - assert:
        that:
          - address is changed
          - address is not failed
          - address_info.objects | length == 0

    - name: Delete a Subnet
      infoblox.bloxone.ipam_subnet:
        address: "10.0.0.0/16"
        space: "{{ ip_space.id }}"
        state: "absent"
      register: subnet

    - name: Delete IP Space
      infoblox.bloxone.ipam_ip_space:
        name: "{{ ip_name }}"
        state: "absent"
      register: ip_space