---
#TODO: add tests
# The following require additional plugins to be supported.
# - Next Available Address in Range

- module_defaults:
    group/infoblox.bloxone.all:
      csp_url: "{{ csp_url }}"
      api_key: "{{ api_key }}"
  block:
    - ansible.builtin.set_fact:
        tag_value: "site-{{ 999999 | random | string }}"

    # Basic tests for Address
    - name: Create an Address (check mode)
      infoblox.bloxone.ipam_address:
        address: "10.0.0.3"
        space: "{{ _ip_space.id }}"
        state: "present"
      check_mode: true
      register: address
    - name: Get information about the Address
      infoblox.bloxone.ipam_address_info:
        filters:
          address: "10.0.0.3"
          space: "{{ _ip_space.id }}"
      register: address_info
    - assert:
        that:
          - address is changed
          - address is not failed
          - address_info.objects | length == 0

    - name: Create an Address
      infoblox.bloxone.ipam_address:
        address: "10.0.0.3"
        space: "{{ _ip_space.id }}"
        state: "present"
      register: address
    - name: Get information about the Address
      infoblox.bloxone.ipam_address_info:
        filters:
          address: "10.0.0.3"
          space: "{{ _ip_space.id }}"
      register: address_info
    - assert:
        that:
          - address is changed
          - address is not failed
          - address_info.objects | length == 1
          - address_info.objects[0].id == address.id

    - name: Create an Address(idempotent)
      infoblox.bloxone.ipam_address:
        address: "10.0.0.3"
        space: "{{ _ip_space.id }}"
        state: "present"
      register: address
    - assert:
        that:
          - address is not changed
          - address is not failed

    - name: Delete an Address (check mode)
      infoblox.bloxone.ipam_address:
        address: "10.0.0.3"
        space: "{{ _ip_space.id }}"
        state: "absent"
      check_mode: true
      register: address
    - name: Get information about the Address
      infoblox.bloxone.ipam_address_info:
        filters:
          address: "10.0.0.3"
          space: "{{ _ip_space.id }}"
      register: address_info
    - assert:
        that:
          - address is changed
          - address is not failed
          - address_info.objects | length == 1

    - name: Delete an Address
      infoblox.bloxone.ipam_address:
        address: "10.0.0.3"
        space: "{{ _ip_space.id }}"
        state: "absent"
      register: address
    - name: Get information about the Address
      infoblox.bloxone.ipam_address_info:
        filters:
          address: "10.0.0.3"
          space: "{{ _ip_space.id }}"
      register: address_info
    - assert:
        that:
          - address is changed
          - address is not failed
          - address_info.objects | length == 0

    - name: Delete an Address(idempotent)
      infoblox.bloxone.ipam_address:
        address: "10.0.0.3"
        space: "{{ _ip_space.id }}"
        state: "absent"
      register: address
    - assert:
        that:
          - address is not changed
          - address is not failed

    - name: Create an Address with Names
      infoblox.bloxone.ipam_address:
        address: "10.0.0.3"
        names:
          - name: "test-1"
            type: "user"
        space: "{{ _ip_space.id }}"
        state: "present"
      register: address
    - name: Get information about the Address
      infoblox.bloxone.ipam_address_info:
        filters:
          address: "10.0.0.3"
          space: "{{ _ip_space.id }}"
      register: address_info
    - assert:
        that:
          - address is changed
          - address is not failed
          - address_info.objects | length == 1
          - address_info.objects[0].names[0].name == "test-1"
          - address_info.objects[0].names[0].type == "user"

    - name: Create an Address with comment
      infoblox.bloxone.ipam_address:
        address: "10.0.0.3"
        comment: "test comment"
        space: "{{ _ip_space.id }}"
        state: "present"
      register: address
    - name: Get information about the Address
      infoblox.bloxone.ipam_address_info:
        filters:
          address: "10.0.0.3"
          space: "{{ _ip_space.id }}"
      register: address_info
    - assert:
        that:
          - address is changed
          - address is not failed
          - address_info.objects | length == 1
          - address_info.objects[0].id == address.id
          - address_info.objects[0].comment == "test comment"

    - name: Create an Address with hwaddr
      infoblox.bloxone.ipam_address:
        address: "10.0.0.3"
        hwaddr: "00:11:22:33:44:55"
        space: "{{ _ip_space.id }}"
        state: "present"
      register: address
    - name: Get information about the Address
      infoblox.bloxone.ipam_address_info:
        filters:
          address: "10.0.0.3"
          space: "{{ _ip_space.id }}"
      register: address_info
    - assert:
        that:
          - address is changed
          - address is not failed
          - address_info.objects | length == 1
          - address_info.objects[0].id == address.id
          - address_info.objects[0].hwaddr == "00:11:22:33:44:55"

    - name: Create an Address with Interface
      infoblox.bloxone.ipam_address:
        address: "10.0.0.3"
        interface: "eth0"
        space: "{{ _ip_space.id }}"
        state: "present"
      register: address
    - name: Get information about the Address
      infoblox.bloxone.ipam_address_info:
        filters:
          address: "10.0.0.3"
          space: "{{ _ip_space.id }}"
      register: address_info
    - assert:
        that:
          - address is changed
          - address is not failed
          - address_info.objects | length == 1
          - address_info.objects[0].id == address.id
          - address_info.objects[0].interface == "eth0"

    - name: Create an Address with Tags
      infoblox.bloxone.ipam_address:
        address: "10.0.0.3"
        tags:
          location: "{{ tag_value }}"
        space: "{{ _ip_space.id }}"
        state: "present"
      register: address
    - name: Get information about the Address
      infoblox.bloxone.ipam_address_info:
        filters:
          address: "10.0.0.3"
          space: "{{ _ip_space.id }}"
      register: address_info
    - assert:
        that:
          - address is changed
          - address is not failed
          - address_info.objects | length == 1
          - address_info.objects[0].id == address.id

    - name: Create a Next Available Address in Subnet
      infoblox.bloxone.ipam_address:
        space: "{{ _ip_space.id }}"
        next_available_id: "{{ _subnet.id }}"
        state: "present"
      register: next_available_address
    - name: Get information about the Address
      infoblox.bloxone.ipam_address_info:
        id: "{{ next_available_address.id }}"
      register: address_info
    - assert:
        that:
          - next_available_address is changed
          - next_available_address is not failed
          - address_info.objects | length == 1
          - address_info.objects[0].id == next_available_address.id

    - name: Create a Next Available Address in Address Block
      infoblox.bloxone.ipam_address:
        space: "{{ _ip_space.id }}"
        next_available_id: "{{ _address_block.id }}"
        state: "present"
      register: next_available_address
    - name: Get information about the Address
      infoblox.bloxone.ipam_address_info:
        id: "{{ next_available_address.id }}"
      register: address_info
    - assert:
        that:
          - next_available_address is changed
          - next_available_address is not failed
          - address_info.objects | length == 1
          - address_info.objects[0].id == next_available_address.id

  always:
      # Cleanup if the test fails
    - name: Delete IP Space
      ansible.builtin.include_role:
        name: setup_ip_space
        tasks_from: cleanup.yml
